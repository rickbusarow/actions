name: CI

on:
  pull_request:

jobs:
  gradle-args:
    strategy:
      fail-fast: false
      matrix:
        runner: [ ubuntu-latest, macos-latest, macos-14, windows-latest ]
    runs-on: ${{ matrix.runner }}
    steps:
      - name: check out
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4

      - name: gradle args for ${{ env.runner_os }}
        id: gradle-args
        uses: ./gradle-args

      - name: echo args
        run: echo "${{ steps.gradle-args.outputs.args }}"

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0

      - uses: pnpm/action-setup@v2
        with:
          version: 8

      # Node is required for pnpm
      - name: Set up Node
        uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4
        with:
          node-version: 21
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Pnpm
        run: pnpm install --no-lockfile

      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: npx commitlint --from HEAD~1 --to HEAD --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose

  all-green:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - commitlint
      - gradle-args

    steps:
      - name: require that all other jobs have passed
        uses: re-actors/alls-green@05ac9388f0aebcb5727afa17fcccfecd6f8ec5fe # v1.2.2
        with:
          jobs: ${{ toJSON(needs) }}
